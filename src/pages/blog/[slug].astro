---
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

// 生成する全てのパスを取得
export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<"posts">;
}

// 記事データを取得
const { post } = Astro.props;
const { Content } = await post.render();

// フォーマット用の関数
const formatDate = (date: Date) => {
  return date.toLocaleDateString("ja-JP", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <main class="grid grid-cols-1 max-w-4xl mx-auto">
    <div class="w-full grid grid-cols-1 gap-16">
      <header class="mt-6 grid gap-4" aria-labelledby="title author date">
        <div
          class="aspect-video w-full h-auto overflow-hidden grid place-items-center place-content-center md:rounded-sm"
        >
          {
            post.data.featuredImage && (
              <Image src={post.data.featuredImage} alt={post.data.title} />
            )
          }
        </div>

        <h1 id="title" class="text-2xl md:text-4xl font-bold mx-4 md:mx-0">
          {post.data.title}
        </h1>

        <div class="grid gap-1 mx-4 md:mx-none">
          <div class="flex">
            <span id=" author">by {post.data.author}</span>
            <span class="mx-2">/</span>
            <time id="date" datetime={post.data.publishedAt.toISOString()}>
              {formatDate(post.data.publishedAt)}
            </time>
            <span class="mx-2">/</span>
            <a href="">{post.data.category}</a>
          </div>

          <div class="flex gap-2 mt-4">
            {
              post.data.tags.map((tag) => (
                <a
                  href=""
                  class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded"
                >
                  {tag}
                </a>
              ))
            }
          </div>
        </div>
      </header>

      <article class="prose md:max-w-full md:prose-xl mx-4 md:mx-none">
        <Content />
      </article>
    </div>
  </main>
</BaseLayout>
