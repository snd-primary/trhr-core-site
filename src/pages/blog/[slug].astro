---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

// 生成する全てのパスを取得
export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<"posts">;
}

// 記事データを取得
const { post } = Astro.props;
const { Content } = await post.render();

// フォーマット用の関数
const formatDate = (date: Date) => {
  return date.toLocaleDateString("ja-JP", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
};
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <main class="container mx-auto px-4 py-8">
    <article class="max-w-3xl mx-auto">
      <!--       {
        post.data.featuredImage && (
          <Image src={post.data.featuredImage} alt={post.data.title} />
        )
      } -->

      <div class="mt-6">
        <h1 class="text-4xl font-bold">{post.data.title}</h1>

        <div class="flex items-center mt-4 text-gray-600">
          <span>by {post.data.author}</span>
          <span class="mx-2">•</span>
          <time datetime={post.data.publishedAt.toISOString()}>
            {formatDate(post.data.publishedAt)}
          </time>
          <span class="mx-2">•</span>
          <span>{post.data.category}</span>
        </div>

        <div class="flex gap-2 mt-4">
          {
            post.data.tags.map((tag) => (
              <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded">
                {tag}
              </span>
            ))
          }
        </div>
      </div>

      <div class="prose prose-lg max-w-none mt-8">
        <Content />
      </div>
    </article>
  </main>
</BaseLayout>
